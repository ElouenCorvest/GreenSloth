/*! HTML5 Boilerplate v9.0.1 | MIT License | https://html5boilerplate.com/ */

/* main.css 3.0.0 | MIT License | https://github.com/h5bp/main.css#readme */
/*
 * What follows is the result of much research on cross-browser styling.
 * Credit left inline and big thanks to Nicolas Gallagher, Jonathan Neal,
 * Kroc Camen, and the H5BP dev community and team.
 */

/* ==========================================================================
   Base styles: opinionated defaults
   ========================================================================== */

@import url('https://fonts.googleapis.com/css2?family=Source+Sans+3:ital,wght@0,200..900;1,200..900&display=swap');

@font-face {
  font-family: 'Source Sans 3';
  src: url('https://fonts.googleapis.com/css2?family=Source+Sans+3:ital,wght@0,200..900;1,200..900&display=swap');
  font-weight: 200 900;
  font-style: italic;
  font-display: swap;
  }

:root {
  --buttonActiveBorderColor: #00aaafff;
  --buttonHoverColor: rgba(0, 170, 175, 0.2);
  --overallBackgroundLight: #fff
}

html {
  color: #222;
  font-size: 16px;
  line-height: 1.4;
}

body {
  margin: 0;
  font-family: "Source Sans 3", cursive;
  background-color: rgba(0, 170, 175, 0.01);
  min-height: 100%;
}

/*
 * Remove text-shadow in selection highlight:
 * https://twitter.com/miketaylr/status/12228805301
 *
 * Customize the background color to match your design.
 */

::-moz-selection {
  background: #b3d4fc;
  text-shadow: none;
}

::selection {
  background: #b3d4fc;
  text-shadow: none;
}

/*
 * A better looking default horizontal rule
 */

hr {
  display: block;
  height: 1px;
  border: 0;
  border-top: 1px solid #ccc;
  margin: 1em 0;
  padding: 0;
}

/*
 * Remove the gap between audio, canvas, iframes,
 * images, videos and the bottom of their containers:
 * https://github.com/h5bp/html5-boilerplate/issues/440
 */

audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle;
}

/*
 * Remove default fieldset styles.
 */

fieldset {
  border: 0;
  margin: 0;
  padding: 0;
}

/*
 * Allow only vertical resizing of textareas.
 */

textarea {
  resize: vertical;
}

/* ==========================================================================
   Author's custom styles
   ========================================================================== */

/* ==========================================================================
   Helper classes
   ========================================================================== */

/*
 * Hide visually and from screen readers
 */

.hidden,
[hidden] {
  display: none !important;
}

/*
 * Hide only visually, but have it available for screen readers:
 * https://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 *
 * 1. For long content, line feeds are not interpreted as spaces and small width
 *    causes content to wrap 1 word per line:
 *    https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe
 */

.visually-hidden {
  border: 0;
  clip: rect(0, 0, 0, 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
  /* 1 */
}

/*
 * Extends the .visually-hidden class to allow the element
 * to be focusable when navigated to via the keyboard:
 * https://www.drupal.org/node/897638
 */

.visually-hidden.focusable:active,
.visually-hidden.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  white-space: inherit;
  width: auto;
}

/*
 * Hide visually and from screen readers, but maintain layout
 */

.invisible {
  visibility: hidden;
}

/*
 * Clearfix: contain floats
 *
 * The use of `table` rather than `block` is only necessary if using
 * `::before` to contain the top-margins of child elements.
 */

.clearfix::before,
.clearfix::after {
  content: "";
  display: table;
}

.clearfix::after {
  clear: both;
}

/*
 * Clickable template
 *
 * Create a class to have all clickable button the same format
 */

.clickable {
  background-color: inherit;
  /* filter: grayscale(100); */
  border: 0.15em solid rgba(0, 170, 175, 0);
  transition-property: filter, border-color;
  transition-duration: 0.3s;
  transition-timing-function: ease-in-out;
  cursor: pointer;
  box-shadow: 0.5em 0.5em 0.75em 0.2em rgba(0, 0, 0, 0.2);
}

.clickable:hover {
  background-color: var(--buttonHoverColor);
  /* filter: grayscale(0); */
}

.active {
  filter: grayscale(0);
  border-color: var(--buttonActiveBorderColor) !important;
  background-color: var(--buttonHoverColor);
}

/* ==========================================================================
   EXAMPLE Media Queries for Responsive Design.
   These examples override the primary ('mobile first') styles.
   Modify as content requires.
   ========================================================================== */

@media only screen and (min-width: 35em) {
  /* Style adjustments for viewports that meet the condition */
}

@media print,
  (-webkit-min-device-pixel-ratio: 1.25),
  (min-resolution: 1.25dppx),
  (min-resolution: 120dpi) {
  /* Style adjustments for high resolution devices */
}

/* ==========================================================================
   Print styles.
   Inlined to avoid the additional HTTP request:
   https://www.phpied.com/delay-loading-your-print-css/
   ========================================================================== */

@media print {
  *,
  *::before,
  *::after {
    background: var(--overallBackgroundLight) !important;
    color: #000 !important;
    /* Black prints faster */
    box-shadow: none !important;
    text-shadow: none !important;
  }

  a,
  a:visited {
    text-decoration: underline;
  }

  a[href]::after {
    content: " (" attr(href) ")";
  }

  abbr[title]::after {
    content: " (" attr(title) ")";
  }

  /*
   * Don't show links that are fragment identifiers,
   * or use the `javascript:` pseudo protocol
   */
  a[href^="#"]::after,
  a[href^="javascript:"]::after {
    content: "";
  }

  pre {
    white-space: pre-wrap !important;
  }

  pre,
  blockquote {
    border: 1px solid #999;
    page-break-inside: avoid;
  }

  tr,
  img {
    page-break-inside: avoid;
  }

  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3;
  }

  h2,
  h3 {
    page-break-after: avoid;
  }
}

/* Wrappers */

#wrapper {
  display: block;
  width: 90%;
  margin: auto;
  overflow: show;
  padding-top: 100px;
}

#content {
  display: block;
  width: 60%;
  margin: auto;
  height: 100%;
  color: #0a6167ff;
  overflow: visible;
}

/* Add a black background color to the top navigation */
.topnav{
  display: flex;
  align-items: center;
  position: fixed;
  background-color: white;
  box-shadow: 0px 3px 27px 5px rgba(0, 0, 0, 0.10);
  color: black;
  padding: 0;
  overflow: hidden;
  width: 100%;
  margin: 0;
  z-index: 1000;
}

.topnav-left {
  display: flex;
  flex: 1;
  justify-content: flex-start;
  align-items: center;
}

.topnav-center {
  display: flex;
  gap: 3em;
  flex: 1;
  justify-content: center;
  align-items: center;
}

.topnav-right {
  display: flex;
  flex: 1;
  align-items: inherit;
  justify-content: flex-end;
  align-items: center;
}

.tablinks {
  width: 5em;
  height: 1.5em;
  align-content: center;
  text-align: center;
  margin: 0 !important;
  text-decoration: none;
  font-size: 17px;
  color: inherit;
  border: 0.15em solid rgba(0, 170, 175, 0);
}

.topnav-center .tablinks.active{
  background-color: rgba(0, 170, 175, 0.2);
  color: black;
  border: 0.15em solid rgba(0, 170, 175, 0.4);
}

.tablinks {
  border-radius: 2em;
  padding: 0.5em 1em;
}

.topnav img {
  height: 24px;
  margin: 0 !important;
  text-align: center;
  padding: 0px 10px;
  text-decoration: none;
  font-size: 17px;
  justify-content: center;
}

.topnav div.onlyText {
  width: auto;
  margin: 0 !important;
  padding: 14px 16px;
  text-decoration: none;
  font-size: 20px;
  color: inherit;
  justify-content: flex-start;
  height: 100%;
  font-weight: bold;
}

/* Model Selection */
#model-selector {
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
  gap: 1em;
}

.model-row, .badge {
  position: relative;
  border-radius: 8px;
  padding: 0.75em;
  display: grid;
  gap: 0 0.5em;
  grid-template-columns: 1fr 1.5fr;
  transition-property: background-color, transform;
  transition-duration: 0.3s;
  transition-timing-function: ease-in-out;

  &:hover, &:focus {
    background-color: #e6f6f4ff;
    transform: scale(1.1);
  }
}

.model-row h1 {
  text-align: center;
  align-self: center;
}

.model-row img {
  width: 100%;
}

.linkSpanner {
  position:absolute; 
  width:100%;
  height:100%;
  top:0;
  left: 0;
  z-index: 1;
}



.search-bar {
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  align-items: center;
  gap: 0.5em;
  font-size: 1em;
  background-color: white;
  padding: 0.5em;
}

.search-icon {
  height: 1.5em;
}

#searchModel {
  border: 0;
  font-size: inherit;
  flex-grow: 1;
}

#bars {
  display: flex;
  flex-flow: row nowrap;
  justify-content: stretch;
  gap: 1em;
  margin-bottom: 12px;
}

.typeInBar, .tagsButton, .tagsBox, .tag {
  font-family: inherit;
  font-size: inherit;
  border-radius: 2em;
}

.typeInBar {
  background-image: url(searchicon.svg);
  background-size: 1.5em;
  background-position: 10px 12px;
  background-repeat: no-repeat;
  padding: 12px 20px 12px 40px;
  flex-grow: 2;
  border: 0.15em solid transparent;
  cursor: text;
}

.tagsButton {
  padding: 12px 20px;
}

.tagsBox {
  display: flex;
  flex-direction: column;
  gap: 1em;
  overflow: hidden;
  padding: 1em 2em;
  box-shadow: 0px 3px 27px 5px rgba(0, 0, 0, 0.10);
  transition-property: transform opacity;
  transition-duration: 1s;
  transition-timing-function: ease-in-out;
  transform: scaleY(1);
}

.tagsCategory {
  display: flex;
  flex-direction: column;
  gap: 0.5em;
}

.tagsCategory h3 {
  height: fit-content;
  margin: 0;
}

.tagsRow {
  display: flex;
  flex-wrap: wrap;
  column-gap: 1em;
  row-gap: 0.75em;
  text-align: center;
  height: fit-content;
}

.tag {
  padding: 0.5em 0.75em;
  border-radius: 2em;
  min-width: 12.5%;
  width: fit-content;
  height: fit-content;
  
}

/* Model Pages */

/* The Modal (background) */
.modal {
  display: none; /* Hidden by default */
  position: fixed; /* Stay in place */
  z-index: 1; /* Sit on top */
  left: 0;
  top: 0;
  width: 100%; /* Full width */
  height: 100%; /* Full height */
  overflow: auto; /* Enable scroll if needed */
  background-color: rgb(0,0,0); /* Fallback color */
  background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
}

/* Modal Content */
.modal-content {
  display: flex;
  flex-direction: column;
  gap: 0;
  background-color: transparent;
  margin: 15% auto; /* 15% from the top and centered */
  width: 80%; /* Could be more or less, depending on screen size */
  animation: fromTop 1s ease-in-out 0s 1 normal forwards;
}

@keyframes fromTop {
	0% {
		opacity: 0;
		transform: translateY(-100%);
	}

	100% {
		opacity: 1;
		transform: translateY(0);
	}
}

.modal-content > * {
  padding: 0.5em 1em;
}

/* Modal Header */
.modal-header {
  z-index: 1;
  display: grid;
  grid-template-columns: 1fr 2fr 2fr 1fr;
  gap: 1em;
  border-radius: 0.5em 0.5em 0 0;
  background-color: var(--overallBackgroundLight);
  color: inherit;
  box-shadow: 0px 3px 27px 5px rgba(0, 0, 0, 0.10);
}

.modal-header :last-child {
  margin-left: auto;
}

.modal-header span {
  font-size: xx-large;
  transition-property: color;
  transition-duration: 0.3s;
  transition-timing-function: ease-in-out;
  cursor: pointer;
}

.modal-header span:hover {
  color: var(--buttonActiveBorderColor);
}

#compareModel2 {
  cursor: pointer;
}

/* Modal Body */
.modal-body {
  display: flex;
  flex-direction: column;
  background-color: var(--overallBackgroundLight);
  border-radius: 0 0 0.5em 0.5em;
}

.modalCompare {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 2em;
}

.compareInformation {
  display: grid;
  grid-template-columns: 2fr 1fr;
  grid-template-rows: 1fr 1fr 1fr 1fr 1fr;
}

#content-model {
  display: grid;
  margin-bottom: 1em;
  grid-template-columns: 1fr 2fr;
  grid-template-rows: auto 1fr;
  gap: 0 2em;
  justify-content: center;
}

#content-model .modelScheme {
  transition: all .3s ease-in-out;
  grid-row: span 3;
}

#content-model .modelScheme:hover {
  transition: all .3s ease-in-out;
  opacity: 1;
  transform: scale(2);
  transform-origin: top left;
}

.modelScheme {
  width: 100%;
  text-align: center;
  align-self: center;
}

#modelButtonBar {
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  gap: 0.5em;
  align-items: stretch;
  height: max-content;
}

#modelButtonBar > * {
  padding: 0 0.5em;
  border-color: var(--buttonActiveBorderColor);
  text-decoration: none; /* Removes the default underline */
  color: inherit;
  border-radius: 5px; /* Rounds the corners (optional) */
  width: fit-content;
  vertical-align: middle;
}

.modelText {
  margin: 0 0 0 0;
  padding: 0 0.5em 0 0;
  height: fit-content;
  text-align: justify;
}

.modelText h3 {
  margin-top: 0.5em;
}

.modelTabContainer {
  display: flex;
  justify-content: flex-start;
  align-items: center;
  background-color: transparent;
  overflow: hidden;
  width: fit-content;
  height: fit-content;
  margin: 0;
  border-radius: 0.5em 0.5em 0 0;
  border: 0.15em solid var(--buttonActiveBorderColor);
  border-bottom: none;
}

.modelTabContainer button {
  font-size: 0.9em;
  padding: 14px 16px;
}

.modelTabContainer button.active {
  border: 0.15em solid transparent;
}

.modelTabContent {
  display: none;
}

.modelTabContent table {
  table-layout: auto;
  width: 100%;
  border-collapse: collapse;
  border-bottom: 1px solid #ddd;
}

.modelTabContent thead {
  border-bottom: 1px solid #ddd;
  text-align: justify;
}

.modelTabContent tbody td {
  padding: 0.2em 0.4em;
  max-width: 200px;  
  word-wrap: break-word;
  overflow-wrap: break-word;
  white-space: normal;
}

.modelTabContent tbody tr:hover {
  background-color: var(--buttonHoverColor);
}


.tab .tablinks {
  background-color: rgba(10, 97, 103, 1);
  border: 0;
  border-radius: 0.5em;
  padding: 0.7em 1em;
  height: 100%;
  overflow: hidden;
  width: 8em;
}

.tablinks:is(:hover, :focus) {
  transition: background-color 0.3s ease-in-out;
  background-color: rgba(0, 170, 175, 0.2);
}

.tab .tablinks.active{
  background-color: #00aaafff;
  font-weight: 900;
}

.modelCards {
  display: flex;
}

.attributeCard {
  background-color: white;
  border-radius: 1em;
  box-shadow: -10px 3px 27px 5px rgba(0, 0, 0, 0.10);
  padding: 0.5em 2em;
  transition: 0.5s;
  transition-timing-function: cubic-bezier(.25,-0.08,.59,1.39);
}

.attributeCard:not(:first-child) {
  margin-left: -25em;
}

.inactiveCard {
  filter: blur(2px);
  transition: 0.4s;
  transition-timing-function: cubic-bezier(.25,-0.08,.59,1.00);
}

.inactiveCardAfter {
  transform: translateX(26em);
  transition: 0.4s;
  transition-timing-function: cubic-bezier(.25,-0.08,.59,1.00);
}

.attributeCard:hover, .clicked {
  background-color: #caedee;
  transform: translateY(-2em);
  transition: 0.5s;
  transition-timing-function: cubic-bezier(.25,-0.08,.59,1.39);
}

